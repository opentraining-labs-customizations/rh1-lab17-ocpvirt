- name: Fixing the exercise4
  hosts: localhost
  gather_facts: true

  vars:
    user: "{{ lookup('env', 'USER') }}"

  tasks:
    - name: Removing exercise4 virtual machine
      kubernetes.core.k8s:
        state: absent
        template: "exercise4-break-vm.yaml.j2"
      register: exercise4vm
      until: exercise4vm is succeeded
      retries: 60
      delay: 10
      failed_when: exercise4vm is failed or exercise4vm.failed

    - name: Wait for the Virtual Machine to be removed
      kubernetes.core.k8s_info:
        kind: VirtualMachine
        namespace: "namespace-{{ user }}"
        name: "exercise4"
      register: cleanvm
      retries: 60
      delay: 2
      until: cleanvm.resources | length == 0

    - name: Get user SSH key
      ansible.builtin.slurp:
        src: "/home/{{ user }}/.ssh/id_rsa.pub"
      register: usersshkey

    - name: Removing the idrsa secret
      kubernetes.core.k8s:
        state: absent
        template: "exercise4-secret.yaml.j2"
      register: secretidrsa
      until: secretidrsa is succeeded
      retries: 60
      delay: 10

    - name: Create SSH config file with StrictHostKeyChecking no
      ansible.builtin.copy:
        dest: '/home/{{ user }}/.ssh/config'
        content: |
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
        owner: '{{ user }}'
        group: '{{ user }}'
        mode: '0600'

    - name: Get user SSH key
      ansible.builtin.slurp:
        src: "/home/{{ user }}/.ssh/id_rsa.pub"
      register: usersshkey

    - name: Create the idrsa secret
      kubernetes.core.k8s:
        state: present
        template: "exercise4-secret.yaml.j2"
      register: secretidrsa
      until: secretidrsa is succeeded
      retries: 60
      delay: 10
      failed_when: secretidrsa is failed or secretidrsa.failed

    - name: Creating exercise4 virtual machine
      kubernetes.core.k8s:
        state: present
        template: "exercise4-fix-vm.yaml.j2"
      register: exercise4vm
      until: exercise4vm is succeeded
      retries: 60
      delay: 10
      failed_when: exercise4vm is failed or exercise4vm.failed

    - name: Wait for VM to be running
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        namespace: "namespace-{{ user }}"
        name: "exercise4"
      register: exercise4info
      until: "exercise4info.resources | length > 0 and exercise4info.resources[0].status.phase == 'Running'"
      retries: 60
      delay: 10
      failed_when: exercise4info.resources | length == 0
