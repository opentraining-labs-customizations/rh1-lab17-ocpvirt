---
- name: Preparing the exercise9
  hosts: localhost
  gather_facts: true

  vars:
    user: "{{ lookup('env', 'USER') }}"

  tasks:
    - name: Create SSH config file with StrictHostKeyChecking no
      ansible.builtin.copy:
        dest: '/home/{{ user }}/.ssh/config'
        content: |
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
        owner: '{{ user }}'
        group: '{{ user }}'
        mode: '0600'

    - name: Read the content of the file
      ansible.builtin.slurp:
        src: '/home/{{ user }}/.ssh/id_rsa.pub'
      register: idrsapub

    - name: Store base64 encoded content in a variable
      ansible.builtin.set_fact:
        encodedsshpubkey: "{{ idrsapub.content | trim | b64encode }}"

    - name: Create the idrsa secret
      kubernetes.core.k8s:
        state: present
        template: "exercise9-secret.yaml.j2"
      register: secretidrsa
      until: secretidrsa is succeeded
      retries: 60
      delay: 10
      failed_when: secretidrsa is failed or secretidrsa.failed

    - name: Creating the exercise9 virtual machine
      kubernetes.core.k8s:
        state: present
        template: "exercise9-vm.yaml.j2"
      register: breakvm
      until: breakvm is succeeded
      retries: 60
      delay: 10
      failed_when: breakvm is failed or breakvm.failed

    - name: Wait for VM to be running
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        namespace: "namespace-{{ user }}"
        name: "exercise9"
      register: exercise9info
      until: "exercise9info.resources | length > 0 and exercise9info.resources[0].status.phase == 'Running'"
      retries: 60
      delay: 10
      failed_when: exercise9info.resources | length == 0
